spring.kafka.consumer.group-id = redhat
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.bootstrap-servers = my-cluster-kafka-bootstrap-ibm-demo.apps.cluster-dos-ibm-666f.dos-ibm-666f.example.opentlc.com:443
spring.kafka.properties.security.protocol = SSL
spring.kafka.properties.ssl.truststore.location = /tmp/src/src/main/resources/keystore.jks
spring.kafka.properties.ssl.truststore.password = password
kafka.cert.path = /tmp/certs/ca.crt
kafka.producer.url = ${KAFKA_PRODUCER_URL}
kafka.backend.topic = ${KAFKA_BACKEND_TOPIC}
kafka.ui.topic = ${KAFKA_UI_TOPIC}

## Database Properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.datasource.initialization-mode=always
spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://${POSTGRES_SERVICE_URL}
spring.datasource.url=jdbc:postgresql://ab1d44e17a2ef4c7eabc5499f7d1ebc6-587671709.us-east-1.elb.amazonaws.com:31842/sampledb?sslmode=disable
spring.datasource.username=openshift
# md5 hash for openshift
spring.datasource.password=3021808e247cf53a757ffb56670d8ed8
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true